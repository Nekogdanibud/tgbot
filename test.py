import sys	
from marzban.api import MarzbanAPI
from config import Config
from pprint import pprint

def print_header(title):
    print(f"\n{'='*50}")
    print(f"{title.upper():^50}")
    print(f"{'='*50}")

def test_connection(api):
    print_header("testing api connection")
    try:
        stats = api.get_system_stats()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Marzban API")
        print("–í–µ—Ä—Å–∏—è Marzban:", stats.get("version"))
        print("–°—Ç–∞—Ç—É—Å:", stats.get("status"))
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")
        return False

def test_user_management(api, test_username="test_user_check"):
    print_header("testing user management")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        "username": test_username,
        "proxies": {
            "vless": {}
        },
        "data_limit": 1073741824,  # 1GB
        "expire": None  # –ë–µ—Å—Å—Ä–æ—á–Ω—ã–π
    }
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ
        print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        created_user = api.create_user(user_data)
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {created_user['username']}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ
        print("\nüîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...")
        user_info = api.get_user(test_username)
        pprint(user_info)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö (2GB)...")
        updated = api.update_user(test_username, {"data_limit": 2147483648})
        print(f"‚úÖ –ù–æ–≤—ã–π –ª–∏–º–∏—Ç: {updated['data_limit']/1024/1024/1024:.2f} GB")
        
        # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        users = api.get_users(limit=100)
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
       
        for u in users:
            print(f"- {u['username']} (—Å—Ç–∞—Ç—É—Å: {u['status']})")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return False
    finally:
        # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\nüîÑ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        if api.delete_user(test_username):
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ Marzban API")
    
    try:
        api = MarzbanAPI()
        
        if not test_connection(api):
            sys.exit(1)
            
        if not test_user_management(api):
            sys.exit(1)
            
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"\nüî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    main()
